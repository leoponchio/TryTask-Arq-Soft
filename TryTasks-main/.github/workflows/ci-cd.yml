# .github/workflows/ci-cd.yml
name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1) Faz checkout do repositório
      - name: Checkout do código
        uses: actions/checkout@v3

      # 2) Configura JDK 11
      - name: Configurar JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      # 3) Cria o diretório lib/ (caso não exista)
      - name: Criar diretório lib/
        run: mkdir -p lib

      # 4) Baixa o driver JDBC do PostgreSQL para lib/
      - name: Baixar driver PostgreSQL JDBC
        run: |
          wget https://jdbc.postgresql.org/download/postgresql-42.7.3.jar \
               -O lib/postgresql-42.7.3.jar

      # 5) Baixa o JUnit Platform Console Standalone para lib/
      - name: Baixar JUnit Platform Console Standalone
        run: |
          wget https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/1.9.2/junit-platform-console-standalone-1.9.2.jar \
               -O lib/junit-platform-console-standalone-1.9.2.jar

      # 6) Verifica a versão do Ant (já vem instalado no ubuntu-latest)
      - name: Verificar versão do Ant
        run: ant -version

      # 7) Executa Ant na target “test” (compile + testes)
      - name: Executar Ant → test
        run: ant test

      # 8) (Opcional) Para gerar o JAR final, descomente:
      # - name: Empacotar JAR final
      #   run: ant jar

      # 9) (Opcional) Para publicar o JAR como artifact:
      # - name: Upload do JAR
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: TryTasks-JAR
      #     path: dist/TryTasks.jar
